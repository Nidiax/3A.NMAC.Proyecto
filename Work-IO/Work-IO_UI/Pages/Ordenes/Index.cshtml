@page
@model Work_IO_UI.Pages.Ordenes.IndexModel
@{
    ViewData["Title"] = "Index";
}


<script src="~/js/jspdf.debug.js"></script>
<script src="~/js/jquery-3.5.1.min.js"></script>

<h1 class="text-center">Ordenes Registradas</h1>
<br />
<div class="d-flex justify-content-end p-2">
    <a asp-page="/Menu" class="btn btn-light m-2">Regresar</a>
    <input type="button" class="btn btn-info m-2" onclick="demoFromHTML('tab_orden','tab_orden')" value="Descargar Reporte" />
</div>


<div id="">
    <table id="tab_orden" class="table">
        <!--Head-->
        <thead class="thead-dark">
            <tr>
                <th>
                    Orden Id:
                </th>
                <th>
                    Fecha de creación:
                </th>
                <th>
                    Tipo de Vacante:
                </th>
                <th>
                    Empresa al que pertenece:
                </th>
                <th>
                    Asesor al que pertenece:
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Ordenes)
            {
                <tr>
                    <th scope="row">@Html.DisplayFor(m => item.Id)</th>
                    <th>@Html.DisplayFor(m => item.CreatedAT)</th>
                    <td>@Html.DisplayFor(m => item.TipoVacante)</td>

                    @foreach (var emp in Model.Empresas)
                        @if (item.EmpresaId == emp.Id)
                        {
                            <td>@Html.DisplayFor(m => emp.Nombre)</td>

                            @foreach (var ase in Model.Asesores)
                                @if (item.AsesorId == ase.Id)
                                {
                                    <td>@Html.DisplayFor(m => ase.Nombre)</td>
                                }

                            }

                        <td>
                            <a class="btn btn-warning" asp-page="/Ordenes/Edit" asp-route-id="@item.Id" type="button">Detalles</a>
                        </td>
                    </tr>
                }


        </tbody>
    </table>
</div>


@section scripts {
    <script>
        function demoFromHTML() {
            var pdf = new jsPDF('p', 'pt', 'letter');
            // source can be HTML-formatted string, or a reference
            // to an actual DOM element from which the text will be scraped.
            source = $('#tab_orden')[0];

            // we support special element handlers. Register them with jQuery-style 
            // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
            // There is no support for any other type of selectors 
            // (class, of compound) at this time.
            specialElementHandlers = {
                // element with id of "bypass" - jQuery style selector
                '#bypassme': function (element, renderer) {
                    // true = "handled elsewhere, bypass text extraction"
                    return true
                }
            };
            margins = {
                top: 80,
                bottom: 60,
                left: 40,
                width: 522
            };
            // all coords and widths are in jsPDF instance's declared units
            // 'inches' in this case
            pdf.fromHTML(
                source, // HTML string or DOM elem ref.
                margins.left, // x coord
                margins.top, { // y coord
                'width': margins.width, // max width of content on PDF
                'elementHandlers': specialElementHandlers
            },

                function (dispose) {
                    // dispose: object with X, Y of the last line add to the PDF 
                    //          this allow the insertion of new lines after html
                    pdf.save('Ordenes.pdf');
                }, margins);
        }
    </script>
}














